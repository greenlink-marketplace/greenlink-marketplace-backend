# Generated by Django 5.2.1 on 2025-05-24 01:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('marketplace', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecyclableMaterialCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Recycler',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('phone', models.CharField(max_length=14)),
                ('address', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='RecyclingLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RecyclableMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('quantity_gram', models.PositiveIntegerField(help_text='Stored in grams. For example: 12000 = 12kg')),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consumer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketplace.consumer')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recycling.recyclablematerialcategory')),
                ('recycler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recycling.recycler')),
                ('recycling_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='recycling.recyclinglocation')),
            ],
        ),
        migrations.CreateModel(
            name='RecyclingManager',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone', models.CharField(max_length=14)),
                ('recycling_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recycling.recyclinglocation')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_kg_cents', models.PositiveIntegerField(help_text='Stored in cents. For example: 199 = R$1.99')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recyclable_material_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recycling.recyclablematerialcategory')),
                ('recycling_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recycling.recyclinglocation')),
            ],
            options={
                'unique_together': {('recycling_location', 'recyclable_material_category')},
            },
        ),
    ]
